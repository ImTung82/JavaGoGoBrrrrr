content_assist_completion_replacement_background=200,200,0
content_assist_completion_replacement_foreground=200,0,0
content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaChainProposalCategory\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.Number"><rhs name\="java.math.BigInteger"/></lhs><lhs name\="java.math.BigInteger"><rhs name\="java.math.BigInteger"/></lhs><lhs name\="java.lang.Throwable"><rhs name\="java.lang.IllegalArgumentException"/></lhs><lhs name\="java.lang.Exception"><rhs name\="java.lang.IllegalArgumentException"/></lhs><lhs name\="java.awt.image.ImageObserver"><rhs name\="java.awt.Button"/><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="java.awt.MenuContainer"><rhs name\="java.awt.Button"/><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="java.awt.Component"><rhs name\="java.awt.Button"/><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="java.awt.ItemSelectable"><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JComboBox"/></lhs><lhs name\="javax.swing.event.ListDataListener"><rhs name\="javax.swing.JComboBox"/></lhs><lhs name\="java.util.EventListener"><rhs name\="javax.swing.JComboBox"/></lhs><lhs name\="java.awt.event.ActionListener"><rhs name\="javax.swing.JComboBox"/></lhs><lhs name\="javax.accessibility.Accessible"><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="javax.swing.JComponent"><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="javax.swing.TransferHandler$HasGetTransferHandler"><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="java.awt.Container"><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JComboBox"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="javax.swing.JComboBox"><rhs name\="javax.swing.JComboBox"/></lhs><lhs name\="javax.swing.MenuElement"><rhs name\="javax.swing.JMenuBar"/><rhs name\="javax.swing.JMenuItem"/></lhs><lhs name\="javax.swing.JMenuBar"><rhs name\="javax.swing.JMenuBar"/></lhs><lhs name\="javax.swing.AbstractButton"><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/></lhs><lhs name\="javax.swing.SwingConstants"><rhs name\="javax.swing.JMenuItem"/><rhs name\="javax.swing.JRadioButton"/><rhs name\="javax.swing.JLabel"/><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="javax.swing.JMenuItem"><rhs name\="javax.swing.JMenuItem"/></lhs><lhs name\="javax.swing.text.JTextComponent"><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="javax.swing.Scrollable"><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="javax.swing.JTextField"><rhs name\="javax.swing.JTextField"/></lhs><lhs name\="java.awt.LayoutManager"><rhs name\="java.awt.GridLayout"/></lhs><lhs name\="javax.swing.JToggleButton"><rhs name\="javax.swing.JRadioButton"/></lhs><lhs name\="javax.swing.JRadioButton"><rhs name\="javax.swing.JRadioButton"/></lhs><lhs name\="javax.swing.JLabel"><rhs name\="javax.swing.JLabel"/></lhs><lhs name\="GSach.GUI_delSA"><rhs name\="GSach.GUI_delSA"/></lhs></history>
content_assist_number_of_computers=15
content_assist_parameters_background=52,57,61
content_assist_parameters_foreground=238,238,238
content_assist_proposals_background=52,57,61
content_assist_proposals_foreground=238,238,238
eclipse.preferences.version=1
java_bracket=249,250,244
java_comment_task_tag=154,140,124
java_default=217,232,247
java_doc_default=128,128,128
java_doc_keyword=154,140,124
java_doc_link=169,156,140
java_doc_tag=30,120,155
java_keyword=204,108,29
java_keyword_bold=false
java_keyword_return=204,108,29
java_keyword_return_bold=false
java_multi_line_comment=128,128,128
java_operator=230,230,250
java_single_line_comment=128,128,128
java_string=23,198,163
javadocElementsStyling.darkModeDefaultColors=true
matchingBracketsColor=249,250,244
org.eclipse.jdt.ui.formatterprofiles.version=23
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="GUIDADiem">package GDiem;&\#13;\r\n&\#13;\r\nimport java.awt.BorderLayout;&\#13;\r\nimport java.awt.FlowLayout;&\#13;\r\nimport java.awt.GridLayout;&\#13;\r\n&\#13;\r\nimport javax.swing.BorderFactory;&\#13;\r\nimport javax.swing.ButtonGroup;&\#13;\r\nimport javax.swing.JButton;&\#13;\r\nimport javax.swing.JComboBox;&\#13;\r\nimport javax.swing.JFrame;&\#13;\r\nimport javax.swing.JLabel;&\#13;\r\nimport javax.swing.JPanel;&\#13;\r\nimport javax.swing.JRadioButton;&\#13;\r\nimport javax.swing.JScrollPane;&\#13;\r\nimport javax.swing.JTable;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class GUI_findHV extends JFrame {&\#13;\r\n\tJComboBox&lt;String&gt; lopComboBox;&\#13;\r\n\tJRadioButton maleGTRadioButton;&\#13;\r\n\tJRadioButton femaleGTRadioButton;&\#13;\r\n\tJButton searchButton;&\#13;\r\n\tJTable studentTable;&\#13;\r\n\tprivate JLabel lopLabel, GTLabel;&\#13;\r\n\tprivate String[] columnNames \= {"M\u00E3 h\u1ECDc vi\u00EAn", "H\u1ECD t\u00EAn", "Gi\u1EDBi t\u00EDnh", "L\u1EDBp", "\u0110i\u1EC3m", "K\u1EBFt qu\u1EA3"};&\#13;\r\n\t&\#13;\r\n    // Kh\u1EDFi t\u1EA1o actionListener v\u1EDBi tham chi\u1EBFu \u0111\u1EBFn GUI&\#13;\r\n    XLDiem actionListener \= new XLDiem(this);&\#13;\r\n\t&\#13;\r\n\tpublic void appGUI() {&\#13;\r\n        setTitle("Qu\u1EA3n l\u00FD \u0111i\u1EC3m");&\#13;\r\n        setSize(800, 600);&\#13;\r\n        setLocationRelativeTo(null);&\#13;\r\n        setLayout(new BorderLayout());&\#13;\r\n        &\#13;\r\n        JPanel inputPanel \= new JPanel(new GridLayout(0, 2, 15, 15));&\#13;\r\n        inputPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));&\#13;\r\n        &\#13;\r\n        lopLabel \= new JLabel("L\u1EDBp");&\#13;\r\n        lopComboBox \= new JComboBox&lt;&gt;(new String[] {"63PM1", "63PM2", "63TH1", "63TH2"});&\#13;\r\n        inputPanel.add(lopLabel);&\#13;\r\n        inputPanel.add(lopComboBox);&\#13;\r\n        &\#13;\r\n        ButtonGroup radioButtonGroup \= new ButtonGroup();&\#13;\r\n        maleGTRadioButton \= new JRadioButton("Nam");&\#13;\r\n        femaleGTRadioButton \= new JRadioButton("N\u1EEF");&\#13;\r\n        &\#13;\r\n        maleGTRadioButton.addActionListener(actionListener);&\#13;\r\n        femaleGTRadioButton.addActionListener(actionListener);&\#13;\r\n        &\#13;\r\n        radioButtonGroup.add(maleGTRadioButton);&\#13;\r\n        radioButtonGroup.add(femaleGTRadioButton);&\#13;\r\n        &\#13;\r\n        &\#13;\r\n        JPanel radioButtonPanel \= new JPanel(new GridLayout(0, 2, 15, 15));&\#13;\r\n        radioButtonPanel.add(maleGTRadioButton);&\#13;\r\n        radioButtonPanel.add(femaleGTRadioButton);&\#13;\r\n        &\#13;\r\n        GTLabel \= new JLabel("Gi\u1EDBi t\u00EDnh");&\#13;\r\n        &\#13;\r\n        inputPanel.add(GTLabel);&\#13;\r\n        inputPanel.add(radioButtonPanel);&\#13;\r\n        &\#13;\r\n        add(inputPanel, BorderLayout.NORTH);&\#13;\r\n        &\#13;\r\n        DefaultTableModel tableModel \= new DefaultTableModel(columnNames, 0);&\#13;\r\n        studentTable \= new JTable(tableModel);&\#13;\r\n        JScrollPane tableScrollPane \= new JScrollPane(studentTable);&\#13;\r\n        add(tableScrollPane, BorderLayout.CENTER);&\#13;\r\n        &\#13;\r\n        JPanel buttonMenuPanel \= new JPanel(new FlowLayout());&\#13;\r\n        buttonMenuPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Tr\u00EAn, tr\u00E1i, d\u01B0\u1EDBi, ph\u1EA3i&\#13;\r\n        &\#13;\r\n        searchButton \= new JButton("T\u00ECm ki\u1EBFm");&\#13;\r\n        buttonMenuPanel.add(searchButton);&\#13;\r\n        searchButton.addActionListener(actionListener);    &\#13;\r\n        &\#13;\r\n        add(buttonMenuPanel, BorderLayout.SOUTH);&\#13;\r\n        &\#13;\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&\#13;\r\n        setVisible(true); &\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic static void main(String[] args) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tGUI_findHV gui \= new GUI_findHV();&\#13;\r\n\t\tgui.appGUI();&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="XLDADiem">package GDiem;&\#13;\r\n&\#13;\r\nimport java.awt.event.ActionEvent;&\#13;\r\nimport java.awt.event.ActionListener;&\#13;\r\nimport java.sql.Connection;&\#13;\r\nimport java.sql.DriverManager;&\#13;\r\nimport java.sql.PreparedStatement;&\#13;\r\nimport java.sql.ResultSet;&\#13;\r\nimport java.sql.SQLException;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class XLDiem implements IHocvien, ActionListener {&\#13;\r\n\tprivate String URL \= "jdbc\:sqlserver\://TOG\:1433;databaseName\=DLDiem;encrypt\=false";&\#13;\r\n\tprivate String username \= "sa";&\#13;\r\n\tprivate String password \= "123456";&\#13;\r\n\t&\#13;\r\n    private GUI_findHV gui;&\#13;\r\n&\#13;\r\n    // Constructor nh\u1EADn tham chi\u1EBFu \u0111\u1EBFn GUI_findHV&\#13;\r\n    public XLDiem(GUI_findHV gui) {&\#13;\r\n        this.gui \= gui;&\#13;\r\n    }&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic Connection getCon() {&\#13;\r\n        Connection connection \= null;&\#13;\r\n        try {&\#13;\r\n            // K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u SQL Server&\#13;\r\n            connection \= DriverManager.getConnection(URL, username, password);&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u00E0nh c\u00F4ng.");&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n            e.printStackTrace();&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u1EA5t b\u1EA1i.");&\#13;\r\n        }&\#13;\r\n        return connection;&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\t@Override&\#13;\r\n\tpublic void getHVbyLop(String lop) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "SELECT * FROM tbHocvien WHERE Lop \= ?";&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n\t\t\tstmt.setString(1, lop);&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n            DefaultTableModel model \= (DefaultTableModel) gui.studentTable.getModel();&\#13;\r\n            model.setRowCount(0); // X\u00F3a d\u1EEF li\u1EC7u c\u0169 tr\u01B0\u1EDBc khi th\u00EAm d\u1EEF li\u1EC7u m\u1EDBi&\#13;\r\n            &\#13;\r\n            while (rs.next()) {&\#13;\r\n                String maHV \= rs.getString("MaHV");&\#13;\r\n                String hoTen \= rs.getString("HoTen");&\#13;\r\n                String gioiTinh \= rs.getString("GT");&\#13;\r\n                String lopHV \= rs.getString("Lop");&\#13;\r\n                float diem \= rs.getFloat("Diem");&\#13;\r\n                &\#13;\r\n                // T\u1EA1o \u0111\u1ED1i t\u01B0\u1EE3ng Hocvien&\#13;\r\n                Hocvien hocVien \= new Hocvien(maHV, hoTen, lopHV, gioiTinh, diem);&\#13;\r\n                String ketQua \= hocVien.Ketqua(diem); // L\u1EA5y k\u1EBFt qu\u1EA3 t\u1EEB ph\u01B0\u01A1ng th\u1EE9c Ketqua&\#13;\r\n                &\#13;\r\n                // Th\u00EAm d\u1EEF li\u1EC7u v\u00E0o b\u1EA3ng&\#13;\r\n                Object[] row \= {&\#13;\r\n                    maHV,&\#13;\r\n                    hoTen,&\#13;\r\n                    gioiTinh,&\#13;\r\n                    lopHV,&\#13;\r\n                    diem,&\#13;\r\n                    ketQua // Th\u00EAm k\u1EBFt qu\u1EA3 v\u00E0o c\u1ED9t K\u1EBFt qu\u1EA3&\#13;\r\n                };&\#13;\r\n                model.addRow(row);&\#13;\r\n            }&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\t@Override&\#13;\r\n\tpublic void getHVbyLopGT(String lop, String gt) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "SELECT * FROM tbHocvien WHERE Lop \= ? AND GT \= ?";&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n\t\t\tstmt.setString(1, lop);&\#13;\r\n\t\t\tstmt.setString(2, gt);&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n            DefaultTableModel model \= (DefaultTableModel) gui.studentTable.getModel();&\#13;\r\n            model.setRowCount(0); // X\u00F3a d\u1EEF li\u1EC7u c\u0169 tr\u01B0\u1EDBc khi th\u00EAm d\u1EEF li\u1EC7u m\u1EDBi&\#13;\r\n            &\#13;\r\n            while (rs.next()) {&\#13;\r\n                String maHV \= rs.getString("MaHV");&\#13;\r\n                String hoTen \= rs.getString("HoTen");&\#13;\r\n                String gioiTinh \= rs.getString("GT");&\#13;\r\n                String lopHV \= rs.getString("Lop");&\#13;\r\n                float diem \= rs.getFloat("Diem");&\#13;\r\n                &\#13;\r\n                // T\u1EA1o \u0111\u1ED1i t\u01B0\u1EE3ng Hocvien&\#13;\r\n                Hocvien hocVien \= new Hocvien(maHV, hoTen, lopHV, gioiTinh, diem);&\#13;\r\n                String ketQua \= hocVien.Ketqua(diem); // L\u1EA5y k\u1EBFt qu\u1EA3 t\u1EEB ph\u01B0\u01A1ng th\u1EE9c Ketqua&\#13;\r\n                &\#13;\r\n                // Th\u00EAm d\u1EEF li\u1EC7u v\u00E0o b\u1EA3ng&\#13;\r\n                Object[] row \= {&\#13;\r\n                    maHV,&\#13;\r\n                    hoTen,&\#13;\r\n                    gioiTinh,&\#13;\r\n                    lopHV,&\#13;\r\n                    diem,&\#13;\r\n                    ketQua // Th\u00EAm k\u1EBFt qu\u1EA3 v\u00E0o c\u1ED9t K\u1EBFt qu\u1EA3&\#13;\r\n                };&\#13;\r\n                model.addRow(row);&\#13;\r\n            }&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic void actionPerformed(ActionEvent e) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tObject sourceButton \= (Object)e.getSource();&\#13;\r\n&\#13;\r\n        if (sourceButton \=\= gui.searchButton) {&\#13;\r\n            String lop \= gui.lopComboBox.getSelectedItem().toString();&\#13;\r\n            getHVbyLop(lop);&\#13;\r\n        } else if (gui.maleGTRadioButton.isSelected() || gui.femaleGTRadioButton.isSelected()) {&\#13;\r\n        \tString lop \= gui.lopComboBox.getSelectedItem().toString();&\#13;\r\n        \tString gt \= "";&\#13;\r\n        \tif (gui.maleGTRadioButton.isSelected()) {&\#13;\r\n        \t\tgt \= "Nam";&\#13;\r\n        \t} else if (gui.femaleGTRadioButton.isSelected()) {&\#13;\r\n        \t\tgt \= "N\u1EEF";&\#13;\r\n        \t}&\#13;\r\n        \tgetHVbyLopGT(lop, gt);&\#13;\r\n        }&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="GUIBookManagement">package BookPackage;&\#13;\r\n&\#13;\r\nimport java.awt.BorderLayout;&\#13;\r\nimport java.awt.FlowLayout;&\#13;\r\nimport java.awt.GridLayout;&\#13;\r\nimport java.awt.event.MouseAdapter;&\#13;\r\nimport java.awt.event.MouseEvent;&\#13;\r\n&\#13;\r\nimport javax.swing.BorderFactory;&\#13;\r\nimport javax.swing.JButton;&\#13;\r\nimport javax.swing.JComboBox;&\#13;\r\nimport javax.swing.JFrame;&\#13;\r\nimport javax.swing.JLabel;&\#13;\r\nimport javax.swing.JPanel;&\#13;\r\nimport javax.swing.JScrollPane;&\#13;\r\nimport javax.swing.JTable;&\#13;\r\nimport javax.swing.JTextField;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class GUIBook extends JFrame {&\#13;\r\n\tJLabel IDLabel, NameLabel, AuthorLabel, PriceLabel, YearLabel;&\#13;\r\n\tJTextField IDField, NameField, AuthorField, PriceField;&\#13;\r\n\tJComboBox&lt;String&gt; YearCB;&\#13;\r\n\tJButton addButton, updateButton;&\#13;\r\n\tJTable bookList;&\#13;\r\n\tString[] columnNames \= {"M\u00E3 s\u00E1ch", "T\u00EAn s\u00E1ch", "N\u0103m xu\u1EA5t b\u1EA3n", "T\u00E1c gi\u1EA3", "Gi\u00E1 b\u00E1n"};&\#13;\r\n\t&\#13;\r\n\tBookProcess actionListener \= new BookProcess(this);&\#13;\r\n\t&\#13;\r\n\tpublic void appGUI() {&\#13;\r\n        setTitle("Qu\u1EA3n l\u00FD s\u00E1ch");&\#13;\r\n        setSize(800, 600);&\#13;\r\n        setLocationRelativeTo(null);&\#13;\r\n        setLayout(new BorderLayout());&\#13;\r\n        &\#13;\r\n        JPanel inputPanel \= new JPanel(new GridLayout(0, 2, 15, 15));&\#13;\r\n        inputPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));&\#13;\r\n        &\#13;\r\n        IDLabel \= new JLabel("M\u00E3 s\u00E1ch\:");&\#13;\r\n        IDField \= new JTextField();&\#13;\r\n        inputPanel.add(IDLabel);&\#13;\r\n        inputPanel.add(IDField);&\#13;\r\n        &\#13;\r\n        NameLabel \= new JLabel("T\u00EAn s\u00E1ch\:");&\#13;\r\n        NameField \= new JTextField();&\#13;\r\n        inputPanel.add(NameLabel);&\#13;\r\n        inputPanel.add(NameField);&\#13;\r\n        &\#13;\r\n        YearLabel \= new JLabel("N\u0103m xu\u1EA5t b\u1EA3n\:");&\#13;\r\n        inputPanel.add(YearLabel);&\#13;\r\n        YearCB \= new JComboBox&lt;&gt;(new String[] {"2018", "2019", "2020"});&\#13;\r\n        inputPanel.add(YearCB);&\#13;\r\n        &\#13;\r\n        AuthorLabel \= new JLabel("T\u00E1c gi\u1EA3\:");&\#13;\r\n        AuthorField \= new JTextField();&\#13;\r\n        inputPanel.add(AuthorLabel);&\#13;\r\n        inputPanel.add(AuthorField);&\#13;\r\n        &\#13;\r\n        PriceLabel \= new JLabel("Gi\u00E1 b\u00E1n\:");&\#13;\r\n        PriceField \= new JTextField();&\#13;\r\n        inputPanel.add(PriceLabel);&\#13;\r\n        inputPanel.add(PriceField);&\#13;\r\n        &\#13;\r\n        add(inputPanel, BorderLayout.NORTH);&\#13;\r\n        &\#13;\r\n        DefaultTableModel tableModel \= new DefaultTableModel(columnNames, 0);&\#13;\r\n        bookList \= new JTable(tableModel);&\#13;\r\n        JScrollPane tableScrollPane \= new JScrollPane(bookList);&\#13;\r\n        &\#13;\r\n        // Th\u00EAm MouseListener \u0111\u1EC3 l\u1EA5y d\u1EEF li\u1EC7u khi ch\u1ECDn m\u1ED9t d\u00F2ng trong b\u1EA3ng&\#13;\r\n        bookList.addMouseListener(new MouseAdapter() {&\#13;\r\n            @Override&\#13;\r\n            public void mouseClicked(MouseEvent e) {&\#13;\r\n                int selectedRow \= bookList.getSelectedRow(); // L\u1EA5y ch\u1EC9 s\u1ED1 c\u1EE7a d\u00F2ng \u0111\u01B0\u1EE3c ch\u1ECDn&\#13;\r\n                if (selectedRow \!\= -1) { // N\u1EBFu c\u00F3 d\u00F2ng n\u00E0o \u0111\u00F3 \u0111\u01B0\u1EE3c ch\u1ECDn&\#13;\r\n                    // L\u1EA5y d\u1EEF li\u1EC7u t\u1EEB c\u00E1c c\u1ED9t c\u1EE7a d\u00F2ng \u0111\u00F3 v\u00E0 \u0111\u1EB7t v\u00E0o c\u00E1c JTextField v\u00E0 JComboBox&\#13;\r\n                    IDField.setText(bookList.getValueAt(selectedRow, 0).toString());&\#13;\r\n                    NameField.setText(bookList.getValueAt(selectedRow, 1).toString());&\#13;\r\n                    YearCB.setSelectedItem(bookList.getValueAt(selectedRow, 2).toString());&\#13;\r\n                    AuthorField.setText(bookList.getValueAt(selectedRow, 3).toString());&\#13;\r\n                    PriceField.setText(bookList.getValueAt(selectedRow, 4).toString());&\#13;\r\n//                    IDField.setEditable(false);&\#13;\r\n                }&\#13;\r\n            }&\#13;\r\n        });&\#13;\r\n        &\#13;\r\n        add(tableScrollPane, BorderLayout.CENTER);&\#13;\r\n        &\#13;\r\n        JPanel buttonMenuPanel \= new JPanel(new FlowLayout());&\#13;\r\n        buttonMenuPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Tr\u00EAn, tr\u00E1i, d\u01B0\u1EDBi, ph\u1EA3i&\#13;\r\n        &\#13;\r\n        addButton \= new JButton("Add Book");&\#13;\r\n        buttonMenuPanel.add(addButton);&\#13;\r\n        addButton.addActionListener(actionListener);&\#13;\r\n        &\#13;\r\n        buttonMenuPanel.add(new JLabel(" || "));&\#13;\r\n        &\#13;\r\n        updateButton \= new JButton("Update Book");&\#13;\r\n        buttonMenuPanel.add(updateButton);&\#13;\r\n        updateButton.addActionListener(actionListener);&\#13;\r\n        &\#13;\r\n        add(buttonMenuPanel, BorderLayout.SOUTH);&\#13;\r\n        &\#13;\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&\#13;\r\n        setVisible(true);&\#13;\r\n        &\#13;\r\n        // G\u1ECDi getBookbyID() sau khi \u0111\u00E3 kh\u1EDFi t\u1EA1o giao di\u1EC7n&\#13;\r\n        actionListener.getBookbyID();&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic static void main(String[] args) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tGUIBook gui \= new GUIBook();&\#13;\r\n\t\tgui.appGUI();&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="XLBookManagement">package BookPackage;&\#13;\r\n&\#13;\r\nimport java.awt.event.ActionEvent;&\#13;\r\nimport java.awt.event.ActionListener;&\#13;\r\nimport java.sql.Connection;&\#13;\r\nimport java.sql.DriverManager;&\#13;\r\nimport java.sql.PreparedStatement;&\#13;\r\nimport java.sql.ResultSet;&\#13;\r\nimport java.sql.SQLException;&\#13;\r\n&\#13;\r\nimport javax.swing.JOptionPane;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class BookProcess implements ActionListener {&\#13;\r\n\tprivate String URL \= "jdbc\:sqlserver\://TOG\:1433;databaseName\=BookDB;encrypt\=false";&\#13;\r\n\tprivate String username \= "sa";&\#13;\r\n\tprivate String password \= "123456";&\#13;\r\n\tprivate Connection connection;&\#13;\r\n\t&\#13;\r\n\tprivate GUIBook gui;&\#13;\r\n\t&\#13;\r\n    // Constructor nh\u1EADn tham chi\u1EBFu \u0111\u1EBFn GUI_findHV&\#13;\r\n    public BookProcess(GUIBook gui) {&\#13;\r\n        this.gui \= gui;&\#13;\r\n    }&\#13;\r\n\t&\#13;\r\n\tpublic Connection getCon() {&\#13;\r\n        Connection connection \= null;&\#13;\r\n        try {&\#13;\r\n            // K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u SQL Server&\#13;\r\n            connection \= DriverManager.getConnection(URL, username, password);&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u00E0nh c\u00F4ng.");&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n            e.printStackTrace();&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u1EA5t b\u1EA1i.");&\#13;\r\n        }&\#13;\r\n        return connection;&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic void getBookbyID() {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "SELECT * FROM tbBook";&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n            DefaultTableModel model \= (DefaultTableModel) gui.bookList.getModel();&\#13;\r\n            model.setRowCount(0); // X\u00F3a d\u1EEF li\u1EC7u c\u0169 tr\u01B0\u1EDBc khi th\u00EAm d\u1EEF li\u1EC7u m\u1EDBi&\#13;\r\n            &\#13;\r\n            while (rs.next()) {&\#13;\r\n                String ID \= rs.getString("ID");&\#13;\r\n                String Name \= rs.getString("Name");&\#13;\r\n                String Year \= rs.getString("Year");&\#13;\r\n                String Author \= rs.getString("Author");&\#13;\r\n                int Price \= rs.getInt("Price");&\#13;\r\n                &\#13;\r\n                // Th\u00EAm d\u1EEF li\u1EC7u v\u00E0o b\u1EA3ng&\#13;\r\n                Object[] row \= {&\#13;\r\n                \tID,&\#13;\r\n                \tName,&\#13;\r\n               \t\tYear,&\#13;\r\n               \t\tAuthor,&\#13;\r\n               \t\tPrice&\#13;\r\n                };&\#13;\r\n                model.addRow(row);&\#13;\r\n            }&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic void insertBook() {&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "INSERT INTO tbBook VALUES (?, ?, ?, ?, ?)";&\#13;\r\n\t\t&\#13;\r\n\t\tString ID \= gui.IDField.getText();&\#13;\r\n\t\tString Name \= gui.NameField.getText();&\#13;\r\n\t\tString Year \= gui.YearCB.getSelectedItem().toString();&\#13;\r\n\t\tString Author \= gui.AuthorField.getText();&\#13;\r\n\t\tString Price \= gui.PriceField.getText();&\#13;\r\n\t\t&\#13;\r\n\t\tif (ID.isEmpty() || Name.isEmpty() || Year.isEmpty() || Author.isEmpty() || gui.PriceField.getText().isEmpty()) {&\#13;\r\n\t\t\tJOptionPane.showMessageDialog(gui, "Vui l\u00F2ng \u0111i\u1EC1n \u0111\u1EA7y \u0111\u1EE7 th\u00F4ng tin.", "Th\u00F4ng b\u00E1o", JOptionPane.WARNING_MESSAGE);&\#13;\r\n\t\t\treturn;&\#13;\r\n\t\t}&\#13;\r\n\t\t&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n\t\t\tstmt.setString(1, ID);&\#13;\r\n\t\t\tstmt.setString(2, Name);&\#13;\r\n\t\t\tstmt.setString(3, Year);&\#13;\r\n\t\t\tstmt.setString(4, Author);&\#13;\r\n\t\t\tstmt.setInt(5, Integer.parseInt(Price));&\#13;\r\n\t\t\t&\#13;\r\n\t\t\tstmt.executeUpdate();&\#13;\r\n\t\t\t&\#13;\r\n\t\t\tJOptionPane.showMessageDialog(gui, "Th\u00EAm s\u00E1ch th\u00E0nh c\u00F4ng", "Th\u00F4ng b\u00E1o", JOptionPane.PLAIN_MESSAGE);&\#13;\r\n\t        getBookbyID();&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\tJOptionPane.showMessageDialog(gui, "Th\u00EAm s\u00E1ch th\u1EA5t b\u1EA1i.", "Th\u00F4ng b\u00E1o", JOptionPane.WARNING_MESSAGE);&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic void updateBook() {&\#13;\r\n        Connection connection \= getCon();&\#13;\r\n        String query \= "UPDATE tbBook SET Name \= ?, Year \= ?, Author \= ?, Price \= ? WHERE ID \= ?";&\#13;\r\n        &\#13;\r\n        try (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n        \tstmt.setString(1, gui.NameField.getText());&\#13;\r\n        \tstmt.setString(2, gui.YearCB.getSelectedItem().toString());&\#13;\r\n        \tstmt.setString(3, gui.AuthorField.getText());&\#13;\r\n        \tstmt.setInt(4, Integer.parseInt(gui.PriceField.getText()));&\#13;\r\n        \tstmt.setString(5, gui.IDField.getText());&\#13;\r\n        \t&\#13;\r\n        \tgui.IDField.setText("");&\#13;\r\n        \tgui.NameField.setText("");&\#13;\r\n        \tgui.AuthorField.setText("");&\#13;\r\n        \tgui.PriceField.setText("");&\#13;\r\n        \tgui.YearCB.setSelectedItem("2018");&\#13;\r\n        \t&\#13;\r\n        \tstmt.executeUpdate();&\#13;\r\n        \t&\#13;\r\n            getBookbyID();&\#13;\r\n        \tJOptionPane.showMessageDialog(gui, "C\u1EADp nh\u1EADt th\u00E0nh c\u00F4ng", "Th\u00F4ng b\u00E1o", JOptionPane.PLAIN_MESSAGE);&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t\tJOptionPane.showMessageDialog(gui, "C\u1EADp nh\u1EADt th\u1EA5t b\u1EA1i", "Th\u00F4ng b\u00E1o", JOptionPane.WARNING_MESSAGE);&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic void actionPerformed(ActionEvent e) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tObject source \= e.getSource();&\#13;\r\n\t\t&\#13;\r\n\t\tif (source \=\= gui.addButton) {&\#13;\r\n\t\t\tinsertBook();&\#13;\r\n\t\t} else if (source \=\= gui.updateButton) {&\#13;\r\n\t\t\tupdateBook();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="XLDALuong">package GLuong;&\#13;\r\n&\#13;\r\nimport java.awt.event.ActionEvent;&\#13;\r\nimport java.awt.event.ActionListener;&\#13;\r\nimport java.sql.Connection;&\#13;\r\nimport java.sql.DriverManager;&\#13;\r\nimport java.sql.PreparedStatement;&\#13;\r\nimport java.sql.ResultSet;&\#13;\r\nimport java.sql.SQLException;&\#13;\r\nimport java.sql.Statement;&\#13;\r\n&\#13;\r\nimport javax.swing.JButton;&\#13;\r\nimport javax.swing.JOptionPane;&\#13;\r\n&\#13;\r\npublic class XLLuong implements ActionListener {&\#13;\r\n\tprivate String URL \= "jdbc\:sqlserver\://TOG\:1433;databaseName\=DLLuong;encrypt\=false";&\#13;\r\n\tprivate String username \= "sa";&\#13;\r\n\tprivate String password \= "123456";&\#13;\r\n\tprivate Connection connection;&\#13;\r\n\t&\#13;\r\n    private GUI_updateNV gui;&\#13;\r\n&\#13;\r\n    // Constructor nh\u1EADn tham chi\u1EBFu \u0111\u1EBFn GUI_updateNV&\#13;\r\n    public XLLuong(GUI_updateNV gui) {&\#13;\r\n        this.gui \= gui;&\#13;\r\n    }&\#13;\r\n\t&\#13;\r\n\tpublic Connection getCon() {&\#13;\r\n        Connection connection \= null;&\#13;\r\n        try {&\#13;\r\n            // K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u SQL Server&\#13;\r\n            connection \= DriverManager.getConnection(URL, username, password);&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u00E0nh c\u00F4ng.");&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n            e.printStackTrace();&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u1EA5t b\u1EA1i.");&\#13;\r\n        }&\#13;\r\n        return connection;&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n    public void getNVbyMa(String maNV) {&\#13;\r\n        Connection connection \= getCon();&\#13;\r\n        String query \= "SELECT * FROM tbNhanvien WHERE MaNV \= ?";&\#13;\r\n&\#13;\r\n        try (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n            stmt.setString(1, maNV);&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n&\#13;\r\n            if (rs.next()) {&\#13;\r\n                // L\u1EA5y th\u00F4ng tin nh\u00E2n vi\u00EAn t\u1EEB k\u1EBFt qu\u1EA3 truy v\u1EA5n&\#13;\r\n                String hoten \= rs.getString("Hoten");&\#13;\r\n                String diachi \= rs.getString("Diachi");&\#13;\r\n                int luong \= rs.getInt("Luong");&\#13;\r\n&\#13;\r\n                // C\u1EADp nh\u1EADt th\u00F4ng tin l\u00EAn giao di\u1EC7n&\#13;\r\n                gui.MaNVField.setText(maNV);&\#13;\r\n                gui.HotenField.setText(hoten);&\#13;\r\n                gui.DiachiCB.setSelectedItem(diachi);&\#13;\r\n                gui.LuongField.setText(String.valueOf(luong));&\#13;\r\n                &\#13;\r\n                gui.searchField.setText("");&\#13;\r\n            } else {&\#13;\r\n            \tJOptionPane.showMessageDialog(gui, "Kh\u00F4ng t\u00ECm th\u1EA5y nh\u00E2n vi\u00EAn v\u1EDBi m\u00E3 NV \u0111\u00E3 nh\u1EADp", "Th\u00F4ng b\u00E1o", JOptionPane.WARNING_MESSAGE);&\#13;\r\n            }&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n            e.printStackTrace();&\#13;\r\n        } finally {&\#13;\r\n            if (connection \!\= null) {&\#13;\r\n                try {&\#13;\r\n                    connection.close();&\#13;\r\n                    System.out.println("K\u1EBFt n\u1ED1i \u0111\u00E3 \u0111\u01B0\u1EE3c \u0111\u00F3ng.");&\#13;\r\n                } catch (SQLException e) {&\#13;\r\n                    e.printStackTrace();&\#13;\r\n                }&\#13;\r\n            }&\#13;\r\n        }&\#13;\r\n    }&\#13;\r\n\t&\#13;\r\n\tpublic void updateNV() {&\#13;\r\n        Connection connection \= getCon();&\#13;\r\n        String query \= "UPDATE tbNhanvien SET Hoten \= ?, Diachi \= ?, Luong \= ? WHERE MaNV \= ?";&\#13;\r\n        &\#13;\r\n        try (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n        \tstmt.setString(1, gui.HotenField.getText());&\#13;\r\n        \tstmt.setString(2, gui.DiachiCB.getSelectedItem().toString());&\#13;\r\n        \tstmt.setInt(3, Integer.parseInt(gui.LuongField.getText()));&\#13;\r\n        \tstmt.setString(4, gui.MaNVField.getText());&\#13;\r\n        \t&\#13;\r\n        \tgui.MaNVField.setText("");&\#13;\r\n        \tgui.HotenField.setText("");&\#13;\r\n        \tgui.LuongField.setText("");&\#13;\r\n        \t&\#13;\r\n        \tstmt.executeUpdate();&\#13;\r\n        \t&\#13;\r\n        \tJOptionPane.showMessageDialog(gui, "C\u1EADp nh\u1EADt th\u00E0nh c\u00F4ng", "Th\u00F4ng b\u00E1o", JOptionPane.PLAIN_MESSAGE);&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\t@Override&\#13;\r\n\tpublic void actionPerformed(ActionEvent e) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n        JButton sourceButton \= (JButton) e.getSource();&\#13;\r\n&\#13;\r\n        if (sourceButton \=\= gui.searchButton) {&\#13;\r\n            String maNV \= gui.searchField.getText();&\#13;\r\n            getNVbyMa(maNV);&\#13;\r\n        } else if (sourceButton \=\= gui.updateButton) {&\#13;\r\n            updateNV();&\#13;\r\n        }&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="GUIDALuong"/><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="XLDASach">package GSach;&\#13;\r\n&\#13;\r\nimport java.awt.event.ActionEvent;&\#13;\r\nimport java.awt.event.ActionListener;&\#13;\r\nimport java.sql.Connection;&\#13;\r\nimport java.sql.DriverManager;&\#13;\r\nimport java.sql.PreparedStatement;&\#13;\r\nimport java.sql.ResultSet;&\#13;\r\nimport java.sql.SQLException;&\#13;\r\n&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class XLSach implements ISach, ActionListener {&\#13;\r\n\tprivate String URL \= "jdbc\:sqlserver\://TOG\:1433;databaseName\=DLSach;encrypt\=false";&\#13;\r\n\tprivate String username \= "sa";&\#13;\r\n\tprivate String password \= "123456";&\#13;\r\n\tprivate Connection connection;&\#13;\r\n\tprivate GUI_findSA gui;&\#13;\r\n\t&\#13;\r\n    // Constructor nh\u1EADn tham chi\u1EBFu \u0111\u1EBFn GUI_findHV&\#13;\r\n    public XLSach(GUI_findSA gui) {&\#13;\r\n        this.gui \= gui;&\#13;\r\n    }&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic Connection getCon() {&\#13;\r\n        Connection connection \= null;&\#13;\r\n        try {&\#13;\r\n            // K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u SQL Server&\#13;\r\n            connection \= DriverManager.getConnection(URL, username, password);&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u00E0nh c\u00F4ng.");&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n            e.printStackTrace();&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u1EA5t b\u1EA1i.");&\#13;\r\n        }&\#13;\r\n        return connection;&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic void getSA() {&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "SELECT * FROM tbSach";&\#13;\r\n\t\t&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n            DefaultTableModel model \= (DefaultTableModel) gui.saList.getModel();&\#13;\r\n            model.setRowCount(0); // X\u00F3a d\u1EEF li\u1EC7u c\u0169 tr\u01B0\u1EDBc khi th\u00EAm d\u1EEF li\u1EC7u m\u1EDBi&\#13;\r\n            &\#13;\r\n            while (rs.next()) {&\#13;\r\n                String MaS \= rs.getString("MaS");&\#13;\r\n                String TenS \= rs.getString("TenS");&\#13;\r\n                String NhaXB \= rs.getString("NhaXB");&\#13;\r\n                int NamXB \= rs.getInt("NamXB");&\#13;\r\n                int GiaB \= rs.getInt("GiaB");&\#13;\r\n                &\#13;\r\n                Sach temp \= new Sach(MaS, TenS, NhaXB, NamXB, GiaB);&\#13;\r\n                double KhuyenMai \= temp.Khuyenmai(NamXB, GiaB);&\#13;\r\n                &\#13;\r\n                // Th\u00EAm d\u1EEF li\u1EC7u v\u00E0o b\u1EA3ng&\#13;\r\n                Object[] row \= {&\#13;\r\n                \tMaS,&\#13;\r\n                \tTenS,&\#13;\r\n               \t\tNhaXB,&\#13;\r\n               \t\tNamXB,&\#13;\r\n               \t\tGiaB,&\#13;\r\n               \t\tKhuyenMai&\#13;\r\n                };&\#13;\r\n                model.addRow(row);&\#13;\r\n            }&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic void getSAbyNXBGB() {&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "SELECT * FROM tbSach WHERE NhaXB \= ? AND GiaB \= ?";&\#13;\r\n\t\t&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n\t\t\tstmt.setString(1, gui.NhaXBCB.getSelectedItem().toString());&\#13;\r\n\t\t\tstmt.setInt(2, Integer.parseInt(gui.GiaBTextField.getText()));&\#13;\r\n\t\t\t&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n            DefaultTableModel model \= (DefaultTableModel) gui.saList.getModel();&\#13;\r\n            model.setRowCount(0); // X\u00F3a d\u1EEF li\u1EC7u c\u0169 tr\u01B0\u1EDBc khi th\u00EAm d\u1EEF li\u1EC7u m\u1EDBi&\#13;\r\n            &\#13;\r\n            while (rs.next()) {&\#13;\r\n                String MaS \= rs.getString("MaS");&\#13;\r\n                String TenS \= rs.getString("TenS");&\#13;\r\n                String NhaXB \= rs.getString("NhaXB");&\#13;\r\n                int NamXB \= rs.getInt("NamXB");&\#13;\r\n                int GiaB \= rs.getInt("GiaB");&\#13;\r\n                &\#13;\r\n                Sach temp \= new Sach(MaS, TenS, NhaXB, NamXB, GiaB);&\#13;\r\n                double KhuyenMai \= temp.Khuyenmai(NamXB, GiaB);&\#13;\r\n                &\#13;\r\n                // Th\u00EAm d\u1EEF li\u1EC7u v\u00E0o b\u1EA3ng&\#13;\r\n                Object[] row \= {&\#13;\r\n                \tMaS,&\#13;\r\n                \tTenS,&\#13;\r\n               \t\tNhaXB,&\#13;\r\n               \t\tNamXB,&\#13;\r\n               \t\tGiaB,&\#13;\r\n               \t\tKhuyenMai&\#13;\r\n                };&\#13;\r\n                model.addRow(row);&\#13;\r\n            }&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t@Override&\#13;\r\n\tpublic void actionPerformed(ActionEvent e) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tObject source \= e.getSource();&\#13;\r\n\t\t&\#13;\r\n\t\tif (source \=\= gui.searchButton) {&\#13;\r\n\t\t\tgetSAbyNXBGB();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="GUIDASach">package GSach;&\#13;\r\n&\#13;\r\nimport java.awt.BorderLayout;&\#13;\r\nimport java.awt.FlowLayout;&\#13;\r\nimport java.awt.GridLayout;&\#13;\r\n&\#13;\r\nimport javax.swing.BorderFactory;&\#13;\r\nimport javax.swing.JButton;&\#13;\r\nimport javax.swing.JComboBox;&\#13;\r\nimport javax.swing.JFrame;&\#13;\r\nimport javax.swing.JLabel;&\#13;\r\nimport javax.swing.JPanel;&\#13;\r\nimport javax.swing.JScrollPane;&\#13;\r\nimport javax.swing.JTable;&\#13;\r\nimport javax.swing.JTextField;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\n&\#13;\r\npublic class GUI_findSA extends JFrame{&\#13;\r\n\tJLabel NhaXBLabel, GiaBLabel;&\#13;\r\n\tJComboBox&lt;String&gt; NhaXBCB;&\#13;\r\n\tJTextField GiaBTextField;&\#13;\r\n\tJButton searchButton;&\#13;\r\n\tJTable saList;&\#13;\r\n\t&\#13;\r\n\tString columnNames[] \= {"M\u00E3 s\u00E1ch", "T\u00EAn s\u00E1ch", "Nh\u00E0 xu\u1EA5t b\u1EA3n", "N\u0103m xu\u1EA5t b\u1EA3n", "Gi\u00E1 b\u00E1n", "Khuy\u1EBFn m\u1EA1i"};&\#13;\r\n\t&\#13;\r\n\tXLSach actionListener \= new XLSach(this);&\#13;\r\n\t&\#13;\r\n\tpublic void appGUI() {&\#13;\r\n        setTitle("Qu\u1EA3n l\u00FD s\u00E1ch");&\#13;\r\n        setSize(700, 500);&\#13;\r\n        setLocationRelativeTo(null);&\#13;\r\n        setLayout(new BorderLayout());&\#13;\r\n        &\#13;\r\n        JPanel inputPanel \= new JPanel(new GridLayout(0, 2, 15, 15));&\#13;\r\n        inputPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));&\#13;\r\n        &\#13;\r\n        NhaXBLabel \= new JLabel("Nh\u00E0 xu\u1EA5t b\u1EA3n");&\#13;\r\n        NhaXBCB \= new JComboBox&lt;&gt;(new String[] {"Kim \u0110\u1ED3ng", "Gi\u00E1o d\u1EE5c", "Thanh ni\u00EAn"});&\#13;\r\n        inputPanel.add(NhaXBLabel);&\#13;\r\n        inputPanel.add(NhaXBCB);&\#13;\r\n        &\#13;\r\n        GiaBLabel \= new JLabel("Gi\u00E1 b\u00E1n\:");&\#13;\r\n        GiaBTextField \= new JTextField();&\#13;\r\n        inputPanel.add(GiaBLabel);&\#13;\r\n        inputPanel.add(GiaBTextField);&\#13;\r\n        &\#13;\r\n        add(inputPanel, BorderLayout.NORTH);&\#13;\r\n        &\#13;\r\n        DefaultTableModel tableModel \= new DefaultTableModel(columnNames, 0);&\#13;\r\n        saList \= new JTable(tableModel);&\#13;\r\n        JScrollPane tableScrollPane \= new JScrollPane(saList);&\#13;\r\n        &\#13;\r\n        add(tableScrollPane, BorderLayout.CENTER);&\#13;\r\n        &\#13;\r\n        JPanel buttonMenuPanel \= new JPanel(new FlowLayout());&\#13;\r\n        buttonMenuPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));&\#13;\r\n        &\#13;\r\n        searchButton \= new JButton("T\u00ECm ki\u1EBFm nh\u00E2n vi\u00EAn");&\#13;\r\n        buttonMenuPanel.add(searchButton);&\#13;\r\n        searchButton.addActionListener(actionListener);&\#13;\r\n        &\#13;\r\n        add(buttonMenuPanel, BorderLayout.SOUTH);&\#13;\r\n        &\#13;\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&\#13;\r\n        setVisible(true);&\#13;\r\n        &\#13;\r\n        actionListener.getSA();&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic static void main(String[] args) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tGUI_findSA gui \= new GUI_findSA();&\#13;\r\n\t\tgui.appGUI();&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="XLDASach2">package GSach;&\#13;\r\n&\#13;\r\nimport java.awt.event.ActionEvent;&\#13;\r\nimport java.awt.event.ActionListener;&\#13;\r\nimport java.sql.Connection;&\#13;\r\nimport java.sql.DriverManager;&\#13;\r\nimport java.sql.PreparedStatement;&\#13;\r\nimport java.sql.ResultSet;&\#13;\r\nimport java.sql.SQLException;&\#13;\r\n&\#13;\r\nimport javax.swing.JOptionPane;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class XLSach implements ActionListener {&\#13;\r\n\tprivate String URL \= "jdbc\:sqlserver\://TOG\:1433;databaseName\=DLSach2;encrypt\=false";&\#13;\r\n\tprivate String username \= "sa";&\#13;\r\n\tprivate String password \= "123456";&\#13;\r\n\tprivate Connection connection;&\#13;\r\n\tprivate GUI_delSA gui;&\#13;\r\n\t&\#13;\r\n\t&\#13;\r\n    // Constructor nh\u1EADn tham chi\u1EBFu \u0111\u1EBFn GUI_findHV&\#13;\r\n    public XLSach(GUI_delSA gui) {&\#13;\r\n        this.gui \= gui;&\#13;\r\n    }&\#13;\r\n\t&\#13;\r\n\tpublic Connection getCon() {&\#13;\r\n        Connection connection \= null;&\#13;\r\n        try {&\#13;\r\n            // K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u SQL Server&\#13;\r\n            connection \= DriverManager.getConnection(URL, username, password);&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u00E0nh c\u00F4ng.");&\#13;\r\n        } catch (SQLException e) {&\#13;\r\n            e.printStackTrace();&\#13;\r\n            System.out.println("K\u1EBFt n\u1ED1i t\u1EDBi c\u01A1 s\u1EDF d\u1EEF li\u1EC7u th\u1EA5t b\u1EA1i.");&\#13;\r\n        }&\#13;\r\n        return connection;&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic void getSA() {&\#13;\r\n\t\tConnection connection \= getCon();&\#13;\r\n\t\tString query \= "SELECT * FROM tbSach";&\#13;\r\n\t\t&\#13;\r\n\t\ttry (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n            ResultSet rs \= stmt.executeQuery();&\#13;\r\n            DefaultTableModel model \= (DefaultTableModel) gui.saList.getModel();&\#13;\r\n            model.setRowCount(0); // X\u00F3a d\u1EEF li\u1EC7u c\u0169 tr\u01B0\u1EDBc khi th\u00EAm d\u1EEF li\u1EC7u m\u1EDBi&\#13;\r\n            &\#13;\r\n            while (rs.next()) {&\#13;\r\n                String MaS \= rs.getString("MaS");&\#13;\r\n                String TenS \= rs.getString("TenS");&\#13;\r\n                int NamXB \= rs.getInt("NamXB");&\#13;\r\n                int GiaB \= rs.getInt("GiaB");&\#13;\r\n                &\#13;\r\n                Sach temp \= new Sach(MaS, TenS, NamXB, GiaB);&\#13;\r\n                double Thanhtien \= temp.Thanhtien(NamXB, GiaB);&\#13;\r\n                &\#13;\r\n                // Th\u00EAm d\u1EEF li\u1EC7u v\u00E0o b\u1EA3ng&\#13;\r\n                Object[] row \= {&\#13;\r\n                \tMaS,&\#13;\r\n                \tTenS,&\#13;\r\n               \t\tNamXB,&\#13;\r\n               \t\tGiaB,&\#13;\r\n               \t\tThanhtien&\#13;\r\n                };&\#13;\r\n                model.addRow(row);&\#13;\r\n            }&\#13;\r\n\t\t} catch (SQLException e) {&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic void deleteSA() {&\#13;\r\n\t    int confirm \= JOptionPane.showConfirmDialog(&\#13;\r\n\t        gui, &\#13;\r\n\t        "B\u1EA1n c\u00F3 ch\u1EAFc ch\u1EAFn mu\u1ED1n x\u00F3a s\u00E1ch n\u00E0y kh\u00F4ng?", &\#13;\r\n\t        "X\u00E1c nh\u1EADn x\u00F3a", &\#13;\r\n\t        JOptionPane.YES_NO_OPTION&\#13;\r\n\t    );&\#13;\r\n&\#13;\r\n\t    if (confirm \=\= JOptionPane.YES_OPTION) {&\#13;\r\n\t        Connection connection \= getCon();&\#13;\r\n\t        String query \= "DELETE FROM tbSach WHERE NamXB \= ?";&\#13;\r\n\t            &\#13;\r\n\t        try (PreparedStatement stmt \= connection.prepareStatement(query)) {&\#13;\r\n\t            stmt.setInt(1, Integer.parseInt(gui.NamXB.getSelectedItem().toString()));&\#13;\r\n\t            stmt.executeUpdate();&\#13;\r\n\t                &\#13;\r\n\t            getSA(); // C\u1EADp nh\u1EADt l\u1EA1i danh s\u00E1ch sau khi x\u00F3a&\#13;\r\n\t            JOptionPane.showMessageDialog(gui, "X\u00F3a th\u00E0nh c\u00F4ng\!");&\#13;\r\n\t        } catch (SQLException e) {&\#13;\r\n\t            e.printStackTrace();&\#13;\r\n\t            JOptionPane.showMessageDialog(gui, "X\u00F3a th\u1EA5t b\u1EA1i\! Vui l\u00F2ng th\u1EED l\u1EA1i.", "L\u1ED7i", JOptionPane.ERROR_MESSAGE);&\#13;\r\n\t        }&\#13;\r\n\t    } else {&\#13;\r\n\t        return;&\#13;\r\n\t    }&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\t@Override&\#13;\r\n\tpublic void actionPerformed(ActionEvent e) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tObject source \= e.getSource();&\#13;\r\n\t\tif (source \=\= gui.delButton) {&\#13;\r\n\t\t\tdeleteSA();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="GUIDASach2">package GSach;&\#13;\r\n&\#13;\r\nimport java.awt.BorderLayout;&\#13;\r\nimport java.awt.FlowLayout;&\#13;\r\nimport java.awt.GridLayout;&\#13;\r\n&\#13;\r\nimport javax.swing.BorderFactory;&\#13;\r\nimport javax.swing.JButton;&\#13;\r\nimport javax.swing.JComboBox;&\#13;\r\nimport javax.swing.JFrame;&\#13;\r\nimport javax.swing.JLabel;&\#13;\r\nimport javax.swing.JPanel;&\#13;\r\nimport javax.swing.JScrollPane;&\#13;\r\nimport javax.swing.JTable;&\#13;\r\nimport javax.swing.JTextField;&\#13;\r\nimport javax.swing.table.DefaultTableModel;&\#13;\r\n&\#13;\r\npublic class GUI_delSA extends JFrame {&\#13;\r\n\tJLabel NamXBLabel, GiaBLabel;&\#13;\r\n\tJComboBox&lt;String&gt; NamXB;&\#13;\r\n\tJTextField GiaBTextField;&\#13;\r\n\tJButton delButton;&\#13;\r\n\tJTable saList;&\#13;\r\n\t&\#13;\r\n\tString columnNames[] \= {"M\u00E3 s\u00E1ch", "T\u00EAn s\u00E1ch", "N\u0103m xu\u1EA5t b\u1EA3n", "Gi\u00E1 b\u00E1n", "Th\u00E0nh ti\u1EC1n"};&\#13;\r\n\t&\#13;\r\n\tXLSach actionListener \= new XLSach(this);&\#13;\r\n\t&\#13;\r\n\tpublic void appGUI() {&\#13;\r\n        setTitle("Qu\u1EA3n l\u00FD s\u00E1ch");&\#13;\r\n        setSize(700, 500);&\#13;\r\n        setLocationRelativeTo(null);&\#13;\r\n        setLayout(new BorderLayout());&\#13;\r\n        &\#13;\r\n        JPanel inputPanel \= new JPanel(new GridLayout(0, 2, 15, 15));&\#13;\r\n        inputPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));&\#13;\r\n        &\#13;\r\n        NamXBLabel \= new JLabel("Nh\u00E0 xu\u1EA5t b\u1EA3n");&\#13;\r\n        NamXB \= new JComboBox&lt;&gt;(new String[] {"2019", "2020", "2021"});&\#13;\r\n        inputPanel.add(NamXBLabel);&\#13;\r\n        inputPanel.add(NamXB);&\#13;\r\n        &\#13;\r\n        add(inputPanel, BorderLayout.NORTH);&\#13;\r\n        &\#13;\r\n        DefaultTableModel tableModel \= new DefaultTableModel(columnNames, 0);&\#13;\r\n        saList \= new JTable(tableModel);&\#13;\r\n        JScrollPane tableScrollPane \= new JScrollPane(saList);&\#13;\r\n        &\#13;\r\n        add(tableScrollPane, BorderLayout.CENTER);&\#13;\r\n        &\#13;\r\n        JPanel buttonMenuPanel \= new JPanel(new FlowLayout());&\#13;\r\n        buttonMenuPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));&\#13;\r\n        &\#13;\r\n        delButton \= new JButton("X\u00F3a s\u00E1ch");&\#13;\r\n        buttonMenuPanel.add(delButton);&\#13;\r\n        delButton.addActionListener(actionListener);&\#13;\r\n        &\#13;\r\n        add(buttonMenuPanel, BorderLayout.SOUTH);&\#13;\r\n        &\#13;\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&\#13;\r\n        setVisible(true);&\#13;\r\n        &\#13;\r\n        actionListener.getSA();&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tpublic static void main(String[] args) {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\tGUI_delSA gui \= new GUI_delSA();&\#13;\r\n\t\tgui.appGUI();&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template></templates>
overriddenByCSS=,content_assist_completion_replacement_background,content_assist_completion_replacement_foreground,content_assist_parameters_background,content_assist_parameters_foreground,content_assist_proposals_background,content_assist_proposals_foreground,java_bracket,java_comment_task_tag,java_default,java_doc_default,java_doc_keyword,java_doc_link,java_doc_tag,java_keyword,java_keyword_bold,java_keyword_return,java_keyword_return_bold,java_multi_line_comment,java_operator,java_single_line_comment,java_string,matchingBracketsColor,pf_coloring_argument,pf_coloring_assignment,pf_coloring_comment,pf_coloring_key,pf_coloring_value,semanticHighlighting.abstractClass.color,semanticHighlighting.abstractClass.enabled,semanticHighlighting.abstractMethodInvocation.color,semanticHighlighting.abstractMethodInvocation.enabled,semanticHighlighting.annotation.color,semanticHighlighting.annotation.enabled,semanticHighlighting.annotation.italic,semanticHighlighting.annotationElementReference.color,semanticHighlighting.annotationElementReference.enabled,semanticHighlighting.class.color,semanticHighlighting.class.enabled,semanticHighlighting.deprecatedMember.color,semanticHighlighting.deprecatedMember.enabled,semanticHighlighting.deprecatedMember.underline,semanticHighlighting.deprecatedMember.strikethrough,semanticHighlighting.enum.color,semanticHighlighting.enum.enabled,semanticHighlighting.enum.italic,semanticHighlighting.field.color,semanticHighlighting.field.enabled,semanticHighlighting.inheritedField.color,semanticHighlighting.inheritedMethodInvocation.color,semanticHighlighting.inheritedMethodInvocation.enabled,semanticHighlighting.interface.color,semanticHighlighting.interface.enabled,semanticHighlighting.localVariable.color,semanticHighlighting.localVariable.enabled,semanticHighlighting.localVariableDeclaration.color,semanticHighlighting.localVariableDeclaration.enabled,semanticHighlighting.localVariableDeclaration.bold,semanticHighlighting.method.color,semanticHighlighting.method.enabled,semanticHighlighting.methodDeclarationName.color,semanticHighlighting.methodDeclarationName.enabled,semanticHighlighting.methodDeclarationName.bold,semanticHighlighting.number.color,semanticHighlighting.number.enabled,semanticHighlighting.parameterVariable.color,semanticHighlighting.parameterVariable.enabled,semanticHighlighting.staticField.color,semanticHighlighting.staticField.enabled,semanticHighlighting.staticFinalField.color,semanticHighlighting.staticFinalField.enabled,semanticHighlighting.staticMethodInvocation.color,semanticHighlighting.staticMethodInvocation.enabled,semanticHighlighting.typeArgument.color,semanticHighlighting.typeArgument.enabled,semanticHighlighting.typeParameter.color,semanticHighlighting.typeParameter.enabled,semanticHighlighting.typeParameter.bold,semanticHighlighting.restrictedKeywords.color,semanticHighlighting.restrictedKeywords.bold,sourceHoverBackgroundColor,javadocElementsStyling.darkModeDefaultColors,
pf_coloring_argument=221,40,103
pf_coloring_assignment=217,232,247
pf_coloring_comment=128,128,128
pf_coloring_key=217,232,247
pf_coloring_value=23,198,163
semanticHighlighting.abstractClass.color=62,171,230
semanticHighlighting.abstractClass.enabled=true
semanticHighlighting.abstractMethodInvocation.color=128,246,167
semanticHighlighting.abstractMethodInvocation.enabled=true
semanticHighlighting.annotation.color=160,160,160
semanticHighlighting.annotation.enabled=true
semanticHighlighting.annotation.italic=true
semanticHighlighting.annotationElementReference.color=235,75,100
semanticHighlighting.annotationElementReference.enabled=true
semanticHighlighting.class.color=18,144,195
semanticHighlighting.class.enabled=true
semanticHighlighting.deprecatedMember.color=128,128,128
semanticHighlighting.deprecatedMember.enabled=true
semanticHighlighting.deprecatedMember.strikethrough=true
semanticHighlighting.deprecatedMember.underline=false
semanticHighlighting.enum.color=204,129,186
semanticHighlighting.enum.enabled=true
semanticHighlighting.enum.italic=true
semanticHighlighting.field.color=102,225,248
semanticHighlighting.field.enabled=true
semanticHighlighting.inheritedField.color=143,143,191
semanticHighlighting.inheritedMethodInvocation.color=205,246,104
semanticHighlighting.inheritedMethodInvocation.enabled=true
semanticHighlighting.interface.color=128,242,246
semanticHighlighting.interface.enabled=true
semanticHighlighting.localVariable.color=243,236,121
semanticHighlighting.localVariable.enabled=true
semanticHighlighting.localVariableDeclaration.bold=false
semanticHighlighting.localVariableDeclaration.color=242,242,0
semanticHighlighting.localVariableDeclaration.enabled=true
semanticHighlighting.method.color=167,236,33
semanticHighlighting.method.enabled=true
semanticHighlighting.methodDeclarationName.bold=false
semanticHighlighting.methodDeclarationName.color=30,181,64
semanticHighlighting.methodDeclarationName.enabled=true
semanticHighlighting.number.color=104,151,187
semanticHighlighting.number.enabled=true
semanticHighlighting.parameterVariable.color=121,171,255
semanticHighlighting.parameterVariable.enabled=true
semanticHighlighting.restrictedKeywords.bold=false
semanticHighlighting.restrictedKeywords.color=204,108,29
semanticHighlighting.staticField.color=141,218,248
semanticHighlighting.staticField.enabled=true
semanticHighlighting.staticFinalField.color=141,218,248
semanticHighlighting.staticFinalField.enabled=true
semanticHighlighting.staticMethodInvocation.color=150,236,63
semanticHighlighting.staticMethodInvocation.enabled=true
semanticHighlighting.typeArgument.color=177,102,218
semanticHighlighting.typeArgument.enabled=true
semanticHighlighting.typeParameter.bold=false
semanticHighlighting.typeParameter.color=191,164,164
semanticHighlighting.typeParameter.enabled=true
sourceHoverBackgroundColor=68,68,68
spelling_locale=en_GB
spelling_locale_initialized=true
typefilter_migrated_2=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
